# ===== DOCKER COMPOSE - ENHANCED WITH REDIS, PROMETHEUS, GRAFANA =====
version: '3.8'

services:
  # ===== CLIENT SERVICE =====
  client:
    build:
      context: .
      dockerfile: docker/client.Dockerfile
    ports:
      - "3000:3000"
    environment:
      - SERVER_URL=http://server:5000
      - NEXT_PUBLIC_API_URL=http://localhost:5000
    depends_on:
      - server
    networks:
      - finsight-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # ===== SERVER SERVICE - ENHANCED =====
  server:
    build:
      context: .
      dockerfile: docker/server.Dockerfile
    ports:
      - "5000:5000"
    environment:
      - MONGODB_URI=mongodb://finsight_user:finsight_password@mongodb:27017/finsight
      # ===== REDIS CONFIGURATION - NEW =====
      - REDIS_URL=redis://redis:6379
      - PORT=5000
      - NODE_ENV=production
      # ===== API KEYS =====
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
    depends_on:
      - mongodb
      - redis  # ===== NEW DEPENDENCY =====
    networks:
      - finsight-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  # ===== MONGODB SERVICE =====
  mongodb:
    build:
      context: .
      dockerfile: docker/mongodb.Dockerfile
    ports:
      - "27017:27017"
    volumes:
      - mongodb-data:/data/db
    networks:
      - finsight-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  # ===== REDIS SERVICE - NEW =====
  redis:
    image: redis:7.0-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
      # ===== REDIS CONFIGURATION - NEW =====
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - finsight-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ===== PROMETHEUS SERVICE - NEW =====
  prometheus:
    image: prom/prometheus:v2.42.0
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    networks:
      - finsight-network
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ===== GRAFANA SERVICE - NEW =====
  grafana:
    image: grafana/grafana:9.4.7
    ports:
      - "3001:3000"
    environment:
      # ===== GRAFANA CONFIGURATION - NEW =====
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-piechart-panel,grafana-clock-panel
      - GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH=/etc/grafana/provisioning/dashboards/finsight-overview.json
    volumes:
      - grafana-data:/var/lib/grafana
      # ===== GRAFANA PROVISIONING - NEW =====
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
    networks:
      - finsight-network
    restart: unless-stopped
    depends_on:
      - prometheus
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ===== NODE EXPORTER - NEW (for system metrics) =====
  node-exporter:
    image: prom/node-exporter:latest
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - finsight-network
    restart: unless-stopped

networks:
  finsight-network:
    driver: bridge

volumes:
  mongodb-data:
  redis-data:        # ===== NEW VOLUME =====
  prometheus-data:   # ===== NEW VOLUME =====
  grafana-data:      # ===== NEW VOLUME =====
