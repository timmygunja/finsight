apiVersion: apps/v1
kind: Deployment
metadata:
  name: client
  namespace: finsight
spec:
  replicas: 2
  selector:
    matchLabels:
      app: client
  template:
    metadata:
      labels:
        app: client
    spec:
      containers:
      - name: client
        image: ${YOUR_DOCKER_REGISTRY}/finsight-client:latest
        ports:
        - containerPort: 3000
        env:
        - name: SERVER_URL
          value: "http://server:5000"
        - name: NEXT_PUBLIC_API_URL
          value: "/api"
        resources:
          limits:
            cpu: "500m"
            memory: "512Mi"
          requests:
            cpu: "200m"
            memory: "256Mi"
        readinessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 10
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 15
          periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: client
  namespace: finsight
spec:
  selector:
    app: client
  ports:
  - port: 80
    targetPort: 3000
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: finsight-ingress
  namespace: finsight
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  tls:
  - hosts:
    - finsight.example.com
    secretName: finsight-tls
  rules:
  - host: finsight.example.com
    http:
      paths:
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: server
            port:
              number: 5000
      - path: /
        pathType: Prefix
        backend:
          service:
            name: client
            port:
              number: 80
